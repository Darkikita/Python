Ich m√∂chte ein eigenes Python-Lernskript schreiben. 
Bitte hilf mir, **f√ºr jeden Datentyp / jedes Thema eine komplette Zusammenfassung** zu erstellen im folgenden Stil:

1. Jede Sektion beginnt mit einem gro√üen √úberschriftenblock:
##########################################################################################
# <Thema> --------------------------
##########################################################################################

2. Danach folgt ein Kommentarblock mit den **Properties**:
# -----------------------------------------------------------------
# <Thema> properties:
# - kurze, pr√§gnante Aufz√§hlung der Eigenschaften
# -----------------------------------------------------------------

3. Danach ein Kommentarblock mit den **Common Methods**:
# -----------------------------------------------------------------
# Common <Thema> methods:
# method()  ‚Üí kurze Erkl√§rung
# ...
# -----------------------------------------------------------------

4. Danach folgt ausf√ºhrbarer Python-Code:
- Zuerst `print("<Thema>")`
- Dann Beispiele f√ºr jede Eigenschaft und Methode mit `print()`
- Kommentare hinter den Ausgaben zeigen, was zur√ºckkommt.

5. Falls sinnvoll, am Ende ein Block f√ºr **Common Functions** (wie `len`, `min`, `max`, `sum`, etc.) und **Iteration**.

üëâ Beispiel: Ich gebe dir ein Thema (z. B. "Sequences", "Mappings", "Sets", "Strings", "Booleans", "Numbers"), und du baust mir den Block nach obigem Schema.

Ganz wichtig:
- Die Struktur muss **immer identisch** sein, damit ich ein konsistentes Lernskript aufbauen kann.
- Immer zuerst die **√úbersicht als Kommentarblock**, dann die **Beispiele mit print()**.
- Schreibe mir den kompletten Block so aus, dass ich ihn direkt in eine `.py`-Datei kopieren und ausf√ºhren kann.